{"numFailedTestSuites":1,"numFailedTests":0,"numPassedTestSuites":4,"numPassedTests":17,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":5,"numTotalTests":17,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1753682009309,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["api integration"],"failureMessages":[],"fullName":"api integration createSession calls POST and returns session","location":null,"status":"passed","title":"createSession calls POST and returns session"},{"ancestorTitles":["api integration"],"failureMessages":[],"fullName":"api integration getSessionById calls GET","location":null,"status":"passed","title":"getSessionById calls GET"},{"ancestorTitles":["api integration"],"failureMessages":[],"fullName":"api integration closeSession calls PUT","location":null,"status":"passed","title":"closeSession calls PUT"},{"ancestorTitles":["api integration"],"failureMessages":[],"fullName":"api integration createMessage calls POST message","location":null,"status":"passed","title":"createMessage calls POST message"},{"ancestorTitles":["api integration"],"failureMessages":[],"fullName":"api integration getMessagesBySessionId calls GET","location":null,"status":"passed","title":"getMessagesBySessionId calls GET"},{"ancestorTitles":["api integration"],"failureMessages":[],"fullName":"api integration markMessageAsRead works","location":null,"status":"passed","title":"markMessageAsRead works"},{"ancestorTitles":["api integration"],"failureMessages":[],"fullName":"api integration handles error on createMessage","location":null,"status":"passed","title":"handles error on createMessage"}],"endTime":1753682011494,"message":"","name":"/home/coder/project/workspace/question_generation_service/solutions/93e21f42-0b50-45e0-ba1c-8844ae07fbbe/reactapp/src/utils/api.test.js","startTime":1753682010217,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ChatHeader"],"failureMessages":[],"fullName":"ChatHeader shows recipient name and online dot","location":null,"status":"passed","title":"shows recipient name and online dot"},{"ancestorTitles":["ChatHeader"],"failureMessages":[],"fullName":"ChatHeader shows offline status correctly","location":null,"status":"passed","title":"shows offline status correctly"},{"ancestorTitles":["ChatHeader"],"failureMessages":[],"fullName":"ChatHeader calls onEndChat when button clicked","location":null,"status":"passed","title":"calls onEndChat when button clicked"}],"endTime":1753682011793,"message":"","name":"/home/coder/project/workspace/question_generation_service/solutions/93e21f42-0b50-45e0-ba1c-8844ae07fbbe/reactapp/src/components/ChatHeader.test.js","startTime":1753682010199,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MessageInput"],"failureMessages":[],"fullName":"MessageInput renders input and button, disables send on empty","location":null,"status":"passed","title":"renders input and button, disables send on empty"},{"ancestorTitles":["MessageInput"],"failureMessages":[],"fullName":"MessageInput enables send when input is filled, clears after send","location":null,"status":"passed","title":"enables send when input is filled, clears after send"},{"ancestorTitles":["MessageInput"],"failureMessages":[],"fullName":"MessageInput handles enter key to send","location":null,"status":"passed","title":"handles enter key to send"},{"ancestorTitles":["MessageInput"],"failureMessages":[],"fullName":"MessageInput does not send when disabled","location":null,"status":"passed","title":"does not send when disabled"}],"endTime":1753682011811,"message":"","name":"/home/coder/project/workspace/question_generation_service/solutions/93e21f42-0b50-45e0-ba1c-8844ae07fbbe/reactapp/src/components/MessageInput.test.js","startTime":1753682010149,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ChatWindow"],"failureMessages":[],"fullName":"ChatWindow renders messages correctly with distinction of sent and received","location":null,"status":"passed","title":"renders messages correctly with distinction of sent and received"},{"ancestorTitles":["ChatWindow"],"failureMessages":[],"fullName":"ChatWindow shows empty state when no messages","location":null,"status":"passed","title":"shows empty state when no messages"},{"ancestorTitles":["ChatWindow"],"failureMessages":[],"fullName":"ChatWindow should include timestamps and scrollable area","location":null,"status":"passed","title":"should include timestamps and scrollable area"}],"endTime":1753682011898,"message":"","name":"/home/coder/project/workspace/question_generation_service/solutions/93e21f42-0b50-45e0-ba1c-8844ae07fbbe/reactapp/src/components/ChatWindow.test.js","startTime":1753682010205,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1753682012016,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/coder/project/workspace/question_generation_service/solutions/93e21f42-0b50-45e0-ba1c-8844ae07fbbe/reactapp/node_modules/axios/index.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import axios from './lib/axios.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n    > 1 | import axios from \"axios\";\n        | ^\n      2 |\n      3 | const API_BASE = \"http://localhost:8080/api\";\n      4 |\n\n      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1728:14)\n      at Object.<anonymous> (src/utils/api.js:1:1)\n      at Object.<anonymous> (src/App.js:4:1)\n      at Object.<anonymous> (src/App.test.js:3:1)\n","name":"/home/coder/project/workspace/question_generation_service/solutions/93e21f42-0b50-45e0-ba1c-8844ae07fbbe/reactapp/src/App.test.js","startTime":1753682012016,"status":"failed","summary":""}],"wasInterrupted":false}